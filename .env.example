# =============================================================================
# Svelte Virtual List - Environment Variables
# =============================================================================
# Copy this file to `.env` and modify the values as needed for your development environment.
# Note: Only variables prefixed with `VITE_` are available in the browser.

# -----------------------------------------------------------------------------
# üîç Debug & Development
# -----------------------------------------------------------------------------

# Enable internal debug logging for the virtual list component
# When enabled, shows detailed console logs about:
# - Dirty items being cleared
# - Height calculations and measurements
# - Scroll corrections and adjustments
# - Performance-related internal operations
#
# ‚ö†Ô∏è  Only works in development mode (import.meta.env.DEV = true)
# ‚úÖ  Safe for library consumers - won't show logs in their projects unless they explicitly enable this
# üéØ  Useful for: debugging virtual list behavior, performance analysis, troubleshooting scroll issues
#
# Values: "true" | "false" | any other string (treated as false)
# Default: undefined (disabled)
VITE_SVELTE_VIRTUAL_LIST_DEBUG=true

# -----------------------------------------------------------------------------
# üìù Usage Examples
# -----------------------------------------------------------------------------
#
# Development with debug logs:
# VITE_SVELTE_VIRTUAL_LIST_DEBUG=true
#
# Development without debug logs (default):
# VITE_SVELTE_VIRTUAL_LIST_DEBUG=false
# # or simply comment out/remove the line
#
# Production builds:
# Debug logs are automatically disabled in production regardless of this setting
# due to the import.meta.env.DEV check in the component code.

# -----------------------------------------------------------------------------
# üöÄ Getting Started
# -----------------------------------------------------------------------------
# 1. Copy this file: `cp .env.example .env`
# 2. Modify values as needed for your development workflow
# 3. Run your dev server: `npm run dev`
# 4. Check browser console for debug output (if enabled)
#
# Need help? Check the README.md or open an issue on GitHub!